 document.querySelectorAll(".accept_btn").forEach(button => {
  button.addEventListener("click", (event) => {
      const btn_id = event.target.dataset.id;
      event.target.disabled = true;

      fetch('../backend/accept_demand_backend.php', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/x-www-form-urlencoded'
          },
          body: new URLSearchParams({ btn_id: btn_id })
      })
      .then(response => response.json())  // Parse JSON response
      .then(data => {
          console.log('Response from server:', data);  // Log the entire response

          if (data.error) {  // Check if there's an error key in the response
              console.error('Error:', data.error);
              alert('Error: ' + data.error);  // Display error in alert
          } else {
              console.log('Success:', data);
              alert(data.message || 'Request completed successfully.');  // Display success message
          }
          event.target.disabled = false;  // Re-enable the button
      })
      .catch((error) => {
          console.error('Error:', error);
          alert('An error occurred. Please try again.');  // Catch any unexpected errors
          event.target.disabled = false;  // Re-enable the button
      });
  });
});


////////////////////////////////////user_demands_backend

<?php
include '../backend/php_backend/connection.php';
include '../backend/php_backend/fetch_user_data.php';
include '../backend/send_application_via_email.php';

error_reporting(E_ALL);

header('Content-Type: application/json');

function display() {
    return "this is the function";
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (isset($_POST['btn_id'])){
        $btnId = $_POST['btn_id'];
        try {
            $selector = new FetchUserDataMain();
            $email_selector = new sendUserApplicationTroughEmail();
            $res = $selector->fetchDataFromUsers($conn, 'pending_accounts', 'id', $btnId);
            $row = $res->fetch_assoc();
            if (!$row || empty($row['first_name']) || empty($row['last_name']) || empty($row['email'])) {
                throw new Exception("Invalid data fetched from pending_accounts table.");
            }
            if($selector->fetchDataFromUsers($conn, 'users', 'email', $row['email'])){
                throw new Exception("User already exists.");
            }
            $sql = "INSERT INTO users (first_name, last_name, email) VALUES (?, ?, ?)";
            $stmt = $conn->prepare($sql);
            $stmt->bind_param("sss", $row['first_name'], $row['last_name'], $row['email']);
            $stmt->execute();
            if ($stmt->affected_rows > 0) {
                $displayMessage = display();
                $selector->removeRow($conn,'pending_accounts',$btnId);
                $email_selector->send_confirm_demand_email($row['email']);
                ob_start();
                include '../frontend/components/userDemands.php';
                $updatedContent = ob_get_clean();
                $response = array(
                    "id" => $btnId,
                    "message" => $displayMessage,
                    "first_name" => $row['first_name'],
                    "last_name" => $row['last_name'],
                );
                echo json_encode($response);
            } else {
                throw new Exception("Failed to insert data into the users table.");
            }
            $stmt->close();
        } catch (Exception $e) {
            error_log("Error: " . $e->getMessage());
            echo json_encode(array("error" => $e->getMessage()));
        }
    } else {
        echo json_encode(array("error" => "No btn_id provided."));
    }
} else {
    echo json_encode(array("error" => "Invalid request method."));
}

exit;



///////////////////////////////////////////

$(document).ready(function () {
  $(".accept_btn").click(function () {
      var user_id = $(this).data("id");
      $.ajax({
          type: "POST",
          url: "../backend/accept_demand_backend.php",
          data: {
              user_id: user_id
          },
          cache: false,
          success: function(data) {
              alert("User was granted access"); // Optional: Display success message
              // Reload the demands div
              reloadDemands();
          },
          error: function(xhr, status, error) {
              console.error("AJAX Error:", error);
          }
      });
  });

  // Function to reload the demands div
  function reloadDemands() {
      $.ajax({
          url: "../backend/accept_demand_backend.php", // Fetch the updated demands
          success: function(data) {
              $(".demands").html(data); // Replace the div content with the new data
          },
          error: function(xhr, status, error) {
              console.error("Error loading demands:", error);
          }
      });
  }
});



///////////////

  $(document).ready(function () {
      $(".accept_btn").click(function () {
          const user_id = $(this).data("id");
          $.ajax({
              type: "POST",
              url: "../backend/accept_demand_backend.php",
              data: { user_id: user_id },
              cache: false,
              success: function (data) {
                  alert("User was granted access");
                  $(".demands").load("../frontend/components/userDemandsReload.php");
              },
              error: function (xhr, status, error){
                  console.error("AJAX Error:", error);
              }
          });
      });



///////////////////////////////Code for the reloader and more : 



$(".demands").append('<div class="loader" style="display:none;">Loading...</div>');

$(".accept-demand-btn").on("click", function() {
    var userId = $(this).data("user-id");
    $(".demands .loader").show();  // Show loader

    $.ajax({
        url: "../backend/accept_demand_backend.php",
        type: "POST",
        data: {
            user_id: userId
        },
        success: function(response) {
            $(".demands").html(response);  // Replace content
        },
        error: function(xhr, status, error) {
            console.error("AJAX Error:", error);
        },
        complete: function() {
            $(".demands .loader").hide();  // Hide loader after request finishes
        }
    });
});





////////////////////////user accepted backend
<?php

include_once "../backend/php_backend/connection.php";
include_once "../backend/php_backend/fetch_user_data.php";



$user_id = $_POST['user_id'];
echo $user_id;

$selector = new FetchUserDataMain();


// select data from pending accoutns

$sql = "SELECT * FROM pending_accounts WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $user_id);
$stmt->execute();
$result = $stmt->get_result();
$row = $result->fetch_assoc();

$first_name = $row['first_name'];
$last_name = $row['last_name'];
$email = $row['email'];
$county = $row['county'];
$city = $row['city'];
$university = $row['university'];
$faculty = $row['faculty'];
$year_study = $row['school_year'];
$siblings = $row['siblings'];
$income = $row['income_family'];
$account_type = "student";

$randomPassword = $selector->generateRandomString();
$hashed_password = password_hash($randomPassword, PASSWORD_DEFAULT);


$addUserInfo = "INSERT INTO users(first_name, last_name, email, user_password, account_type) values(?,?,?,?,?)";
$addStmt = $conn->prepare($addUserInfo);
$addStmt->bind_param("sssss", $first_name, $last_name, $email, $hashed_password, $account_type);
$addStmt->execute();

// // delete data from pending accounts

// $deleteData = "DELETE FROM pending_accounts WHERE id = ?";
// $deleteDataPrepare = $conn->prepare($deleteData);
// $deleteDataPrepare->bind_param("i", $user_id);
// $deleteDataPrepare->execute();

include_once '../frontend/components/userDemands.php';

?>
